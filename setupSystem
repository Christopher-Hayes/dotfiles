#!/bin/bash

# Setup bash aliases + functions before setting anything else up
#Probably already have these repos cloned if running this script
#mkdir ~/src
#git clone https://github.com/christopher-hayes/dotfiles ~/src/dotfiles
#git clone https://github.com/christopher-hayes/dotfiles_private ~/src/dotfiles_private
# .bashrc [PRIVATE] - pull in bash aliases + functions script
echo '
if [ -f ~/src/dotfiles_private/bash/.bashrc_custom ]; then
  . ~/src/dotfiles_private/bash/.bashrc_custom
else
  echo "No custom bashfile present (PRIVATE version)"
fi
' >> ~/.bashrc;
# .bashrc [PUBLIC] - pull in bash aliases + functions script
echo '
if [ -f ~/src/dotfiles/bash/.bashrc ]; then
  . ~/src/dotfiles/.bashrc
else
  echo "No custom bashfile present (PUBLIC version)"
fi
' >> ~/.bashrc;
# .vimrc
ln ~/src/dotfiles/vim/.vimrc ~/.vimrc

# Update packages
sudo apt update
# Install function for brevity
i() { sudo apt install "$1" -y; }
log_install() {
  printf "\n--------------\nINSTALLING ${1}\n--------------\n\n"
  sleep 1
}

### Package Management ########################################################
# Ruby
i ruby
# Homebrew
if ! command -v brew &> /dev/null
then
  log_install "HOMEBREW"

	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
	echo 'eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)' >> "/home/${USER}/.profile";
	eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
	brew update
fi
# NVM
if ! command -v nvm &> /dev/null
then
  log_install "NVM v0.35.3"
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
	. ~/.bashrc
	# update node to latest lts version
	nvm::update;
fi
# Yarn
if ! command -v yarn &> /dev/null
then
  log_install "YARN"
  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  sudo apt update && sudo apt install --no-install-recommends yarn
fi


### TOOLS #####################################################################
# Git (just in case it isn't already)
if ! command -v git &> /dev/null
then
  log_install "GIT"
	i git
fi
i git-flow
# Aptitude - Get APT package versions, search, upgrade versions
i aptitude
# htop - Hardware stats
i htop
# alsamixer - CLI Sound levels
i alsamixer
# Webp converter
i webp

# Net tools (ifconfig)
if ! command -v ifconfig &> /dev/null
then
  log_install "net-tools (ifconfig)"
	i net-tools
fi
# GitHub cli
if ! command -v gh &> /dev/null
then
  log_install "GitHub CLI (gh)"
	sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
	sudo apt-add-repository https://cli.github.com/packages
	sudo apt update
	sudo apt install gh
fi
### NPM tools
# Vue CLI
npm i -g @vue/cli
# Generates version for usage in node apps
npm i -g genversion
# Check/update major pkg versions
npm i -g npm-check-updates

### Frequently used packages
# Draco
mkdir ~/pkg; cd ~/pkg
gh repo clone google/draco
cd draco && mkdir build_dir && cd build_dir && cmake ../ && make
# 

### Utilities #################################################################
# Watchman - watch FS
brew install watchman
# PHP
i php
i php-curl
# Rust
curl https://sh.rustup.rs -sSf | sh
export PATH=$HOME/.cargo/bin:$PATH
cargo install cbindgen
# XClip - clipboard util
i xclip
# Build essentials (gcc, g++, make)
i build-essential
# cmake - make-like build tool
i cmake
# Python2.7
i python
# Python3
i python3

### Misc ######################################################################
echo "Remember to bind CAPS to ESCAPE"

